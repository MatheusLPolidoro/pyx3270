{"config":{"lang":["pt"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pyx3270 \u2014 Automa\u00e7\u00e3o para Mainframes com Python","text":"<p>Pyx3270 \u00e9 uma biblioteca Python voltada para intera\u00e7\u00e3o com emuladores de terminais 3270 usados em sistemas mainframe.Com ela, voc\u00ea pode gravar sess\u00f5es, reproduzi-las offline e automatizar processos complexos com simplicidade e controle.</p>"},{"location":"#sobre-o-emulador","title":"Sobre o emulador:","text":""},{"location":"#x3270-wiki","title":"x3270 Wiki","text":"<p>Esta Wiki cont\u00e9m documenta\u00e7\u00e3o para a fam\u00edlia x3270 de emuladores de terminais IBM 3270. </p>"},{"location":"#licenca","title":"Licen\u00e7a","text":"<p>Aqui est\u00e1 o aviso oficial de direitos autorais para x3270, c3270, wc3270, s3270, tcl3270 e pr3287.</p>"},{"location":"#explore-os-principais-topicos-da-biblioteca","title":"Explore os principais t\u00f3picos da biblioteca:","text":""},{"location":"#o-que-e-o-pyx3270","title":"O que \u00e9 o Pyx3270?","text":"<p>Entenda o contexto dos sistemas mainframe, o que s\u00e3o sess\u00f5es 3270 e como o Pyx3270 resolve desafios comuns de automa\u00e7\u00e3o.</p>"},{"location":"#primeiros-passos","title":"Primeiros passos","text":"<p>Aprenda como instalar, configurar e come\u00e7ar a usar a biblioteca. Veja os principais m\u00f3dulos: Automa\u00e7\u00e3o, Grava\u00e7\u00e3o e Reprodu\u00e7\u00e3o.</p>"},{"location":"#tutorial","title":"Tutorial","text":"<p>Siga um passo a passo pr\u00e1tico para automatizar uma sess\u00e3o real, gravar intera\u00e7\u00f5es e reproduzi-las offline.</p>"},{"location":"#comandos-nativos","title":"Comandos Nativos","text":"<p>Explore os comandos dispon\u00edveis para interagir com o terminal 3270 e como us\u00e1-los em scripts Python.</p>"},{"location":"#alteracoes","title":"Altera\u00e7\u00f5es","text":"<p>Acompanhe as atualiza\u00e7\u00f5es da biblioteca, corre\u00e7\u00f5es de bugs e novas funcionalidades por vers\u00e3o.</p>"},{"location":"#estrutura","title":"Estrutura","text":"<p>Explore a estrutura do projeto.</p>"},{"location":"#contribuindo","title":"Contribuindo","text":"<p>Veja como colaborar com o projeto, enviar melhorias e participar da comunidade Pyx3270.</p>"},{"location":"changelog/","title":"Altera\u00e7\u00f5es","text":""},{"location":"changelog/#changelogs","title":"Changelogs","text":"<p>Vers\u00e3o Unreleased changes (2025-08-24)</p>"},{"location":"changelog/#novas-funcionalidades","title":"NOVAS FUNCIONALIDADES","text":"<ul> <li>Adicione classe PyX3270Manager base para heran\u00e7a na cria\u00e7\u00e3o de classes de sistemas offline.</li> <li>Adicione comandos para utiliza\u00e7\u00e3o de todos os m\u00e9todos originais dispon\u00edveis no terminal.</li> <li>Adicione erros customizados herdados de Exception para cada tipo de exce\u00e7\u00e3o do terminal.</li> <li>Adicione funcionalidade set_screen e add para server record.</li> <li>Adicione server para grava\u00e7\u00e3o e reprodu\u00e7\u00e3o de telas em modo offline.</li> </ul>"},{"location":"changelog/#correcoes","title":"CORRE\u00c7\u00d5ES","text":"<ul> <li>Adicione server.replay_handler leitura de teclas n\u00e3o \u00e9 feita quando servidor de aplica\u00e7\u00f5es abre em modo sem emulador.</li> <li>Aumente de tempo limite para aguardo de desbloqueio padr\u00e3o (time_unlock) de 30 para 60 segundos.</li> <li>Corrija captura em fun\u00e7\u00e3o get_string_area para pegar at\u00e9 a ultima linha passada no parametro.</li> </ul>"},{"location":"changelog/#testes","title":"TESTES","text":"<ul> <li>Adicione maior cobertura de testes para os m\u00f3dulos cli, exceptions offline.</li> <li>Adicione testes para emulador e para server.</li> </ul>"},{"location":"comandos/","title":"Comandos do X3270","text":""},{"location":"comandos/#entrada-e-controle","title":"Entrada e Controle","text":"Abort - Aborta scripts e macros pendentes <p>Descri\u00e7\u00e3o: Aborta scripts e macros pendentes.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.abort()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para interromper opera\u00e7\u00f5es em execu\u00e7\u00e3o.</p> Attn - Aten\u00e7\u00e3o <p>Descri\u00e7\u00e3o: Envia a sequ\u00eancia ATTN do 3270, equivalente ao comando TELNET IP. Usado para         interromper certas opera\u00e7\u00f5es no mainframe.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.attn()\n</code></pre> <p>Observa\u00e7\u00f5es: Interrompe processos ou comandos no host.</p> Backspace - Voltar cursor uma posi\u00e7\u00e3o <p>Descri\u00e7\u00e3o: Move o cursor uma posi\u00e7\u00e3o para a esquerda (sem apagar o caractere).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.backspace()\n</code></pre> <p>Observa\u00e7\u00f5es: Cursor apenas se move, n\u00e3o apaga.</p> Backtab - Voltar para campo anterior <p>Descri\u00e7\u00e3o: Move o cursor para o campo anterior no formul\u00e1rio.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.backtab()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para navega\u00e7\u00e3o em formul\u00e1rios.</p> Bell - Toca sino <p>Descri\u00e7\u00e3o: Toca o sino do terminal para alertar o usu\u00e1rio.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.bell()\n</code></pre> <p>Observa\u00e7\u00f5es: Pode ser ignorado se terminal n\u00e3o suportar.</p> CircumNot - Envia ~ ou \u00ac <p>Descri\u00e7\u00e3o: Envia o caractere ~ em modo NVT (terminal padr\u00e3o) ou \u00ac em modo 3270.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.circumnot()\n</code></pre> <p>Observa\u00e7\u00f5es: Usado em ambientes espec\u00edficos de terminal.</p> Clear - Limpa tela <p>Descri\u00e7\u00e3o: Envia o comando CLEAR para limpar a tela no terminal 3270.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.clear()\n</code></pre> <p>Observa\u00e7\u00f5es: Reseta a tela para estado inicial.</p> Close - Fecha conex\u00e3o <p>Descri\u00e7\u00e3o: Alias para disconnect, fecha a conex\u00e3o com o host.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.close()\n</code></pre> <p>Observa\u00e7\u00f5es: Encerramento limpo da sess\u00e3o.</p> Closescript - Encerra script em execu\u00e7\u00e3o <p>Descri\u00e7\u00e3o: Encerra o script em execu\u00e7\u00e3o no terminal.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.closescript()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para abortar scripts longos ou travados.</p> Compose - Interpreta pr\u00f3ximas teclas <p>Descri\u00e7\u00e3o: Interpreta as pr\u00f3ximas duas teclas conforme o mapa de composi\u00e7\u00e3o.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.compose()\n</code></pre> <p>Observa\u00e7\u00f5es: Usado para entrada de caracteres especiais.</p> Connect - Conecta ao host <p>Descri\u00e7\u00e3o: Estabelece conex\u00e3o com o host mainframe.</p> <p>Exemplo:</p> <pre><code>emulator = X3270()\nfrom x3270 import x3270\n\nemulator = x3270(visible=True)\nemulator.connect(host='mainframe.example.com')\n</code></pre> <p>Observa\u00e7\u00f5es: Essencial para iniciar sess\u00f5es.</p> CursorSelect - Seleciona local do cursor (light pen) <p>Descri\u00e7\u00e3o: Emula o clique com a caneta luminosa no local atual do cursor.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.cursorselect()\n</code></pre> <p>Observa\u00e7\u00f5es: Pouco usado atualmente.</p> Delete - Apaga caractere na posi\u00e7\u00e3o do cursor <p>Descri\u00e7\u00e3o: Apaga o caractere na posi\u00e7\u00e3o atual do cursor.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.delete()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para edi\u00e7\u00e3o de campos.</p> DeleteField - Apaga conte\u00fado do campo atual <p>Descri\u00e7\u00e3o: Apaga todo o conte\u00fado do campo em que o cursor est\u00e1.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.deletefield()\n</code></pre> <p>Observa\u00e7\u00f5es: Limpa campo para nova entrada.</p> DeleteWord - Apaga palavra anterior ao cursor <p>Descri\u00e7\u00e3o: Apaga a palavra antes da posi\u00e7\u00e3o atual do cursor.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.deleteword()\n</code></pre> <p>Observa\u00e7\u00f5es: Atalho \u00fatil para edi\u00e7\u00e3o r\u00e1pida.</p> Disconnect - Fecha conex\u00e3o com host <p>Descri\u00e7\u00e3o: Fecha a conex\u00e3o ativa com o host mainframe.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.disconnect()\n</code></pre> <p>Observa\u00e7\u00f5es: Fecha sess\u00e3o atual.</p> Erase - Backspace destrutivo <p>Descri\u00e7\u00e3o: Apaga o caractere anterior ao cursor (backspace destrutivo).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.erase()\n</code></pre> <p>Observa\u00e7\u00f5es: Apaga caractere e move cursor.</p> EraseEOF - Apaga at\u00e9 o fim do campo <p>Descri\u00e7\u00e3o: Apaga do cursor at\u00e9 o final do campo.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.eraseeof()\n</code></pre> <p>Observa\u00e7\u00f5es: Apaga grandes blocos de texto.</p> EraseInput - Apaga todos campos de entrada <p>Descri\u00e7\u00e3o: Apaga todos os campos de entrada da tela.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.eraseinput()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para limpar formul\u00e1rios inteiros.</p> Execute - Executa comando no shell <p>Descri\u00e7\u00e3o: Executa um comando no shell do sistema.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.execute('dir')\n</code></pre> <p>Observa\u00e7\u00f5es: Apenas para comandos do sistema local.</p> Enter - Envia comando ENTER <p>Descri\u00e7\u00e3o: Envia o comando ENTER para o terminal 3270.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.enter()\n</code></pre> <p>Observa\u00e7\u00f5es: Confirma formul\u00e1rio ou comando.</p> Escape - Abre prompt c3270 <p>Descri\u00e7\u00e3o: Abre prompt c3270 para comandos manuais.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.escape()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para diagn\u00f3stico.</p> FieldEnd - Move cursor ao fim do campo <p>Descri\u00e7\u00e3o: Move o cursor para o final do campo atual.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.fieldend()\n</code></pre> <p>Observa\u00e7\u00f5es: Facilita edi\u00e7\u00e3o r\u00e1pida.</p> FieldMark - Envia tecla FIELD MARK <p>Descri\u00e7\u00e3o: Envia a tecla FIELD MARK (marca visual usada em terminais 3270).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.fieldmark()\n</code></pre> <p>Observa\u00e7\u00f5es: Usado para delimitar campos.</p> Flip - Inverte tela (espelho) <p>Descri\u00e7\u00e3o: Inverte a tela da direita para a esquerda.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.flip()\n</code></pre> <p>Observa\u00e7\u00f5es: Usado para teste de exibi\u00e7\u00e3o.</p> Help - Exibe ajuda <p>Descri\u00e7\u00e3o: Exibe ajuda para um t\u00f3pico.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.help('enter')\n</code></pre> <p>Observa\u00e7\u00f5es: Ajuda interativa.</p> HexString - Envia dados hexadecimais <p>Descri\u00e7\u00e3o: Envia sequ\u00eancia de dados codificados em hexadecimal diretamente para o campo.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.hexstring('7F8A9B')\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para comandos avan\u00e7ados.</p> Home - Move cursor para in\u00edcio <p>Descri\u00e7\u00e3o: Move o cursor para o primeiro campo da tela.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.home()\n</code></pre> <p>Observa\u00e7\u00f5es: R\u00e1pido retorno ao in\u00edcio.</p> Ignore - N\u00e3o faz nada <p>Descri\u00e7\u00e3o: N\u00e3o faz nada. Pode ser usado para desabilitar uma tecla.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.ignore()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para scripts condicionalmente desabilitarem a\u00e7\u00f5es.</p> Insert - Ativa modo inser\u00e7\u00e3o <p>Descri\u00e7\u00e3o: Ativa o modo de inser\u00e7\u00e3o do terminal 3270.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.insert()\n</code></pre> <p>Observa\u00e7\u00f5es: Modo inser\u00e7\u00e3o insere caracteres ao inv\u00e9s de sobrescrever.</p> Interrupt - Envia comando TELNET IAC IP <p>Descri\u00e7\u00e3o: Envia o comando TELNET IAC IP para interrup\u00e7\u00e3o (modo NVT).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.interrupt()\n</code></pre> <p>Observa\u00e7\u00f5es: Para interrup\u00e7\u00f5es r\u00e1pidas no host.</p> Key - Envia caractere espec\u00edfico <p>Descri\u00e7\u00e3o: Envia um caractere espec\u00edfico, por nome ou valor hexadecimal.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.key('0x41')\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para envio direto de caracteres.</p> KeyboardDisable - Modifica bloqueio autom\u00e1tico <p>Descri\u00e7\u00e3o: Modifica o bloqueio autom\u00e1tico do teclado.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.keyboarddisable(True)\n</code></pre> <p>Observa\u00e7\u00f5es: Controle avan\u00e7ado do teclado.</p> Keymap - Ativa keymap tempor\u00e1rio <p>Descri\u00e7\u00e3o: Ativa um keymap tempor\u00e1rio para mapeamento de teclas.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.keymap('custommap')\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para teclas customizadas.</p> Keypad - Mostra teclado 3270 <p>Descri\u00e7\u00e3o: Mostra o teclado virtual 3270 na tela (somente funciona para Windows).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.keypad()\n</code></pre> <p>Observa\u00e7\u00f5es: Facilita intera\u00e7\u00e3o via mouse.</p> Left - Move cursor 1 coluna \u00e0 esquerda <p>Descri\u00e7\u00e3o: Move o cursor uma coluna para a esquerda.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.left()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o simples.</p> Left2 - Move cursor 2 colunas \u00e0 esquerda <p>Descri\u00e7\u00e3o: Move o cursor duas colunas para a esquerda.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.left2()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o r\u00e1pida.</p> Macro - Executa macro definido <p>Descri\u00e7\u00e3o: Executa um macro previamente definido.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.macro('login_sequence')\n</code></pre> <p>Observa\u00e7\u00f5es: Automatiza sequ\u00eancias de comandos.</p> Menu - Exibe menu de comandos <p>Descri\u00e7\u00e3o: Exibe o menu de comandos do terminal (somente funciona para Windows).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.menu()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o via menu.</p> Movecursor - Move cursor linha e coluna (origem 0) <p>Descri\u00e7\u00e3o: Move o cursor para linha e coluna espec\u00edficas (origem 0).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.movecursor(5, 10)\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para posicionamento preciso.</p> Movecursor1 - Move cursor linha e coluna (origem 1) <p>Descri\u00e7\u00e3o: Move o cursor para linha e coluna espec\u00edficas (origem 1).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.movecursor1(1, 1)\n</code></pre> <p>Observa\u00e7\u00f5es: Base 1, diferente do padr\u00e3o Python.</p> Movecursoroffset - Move cursor por offset <p>Descri\u00e7\u00e3o: Move o cursor para uma posi\u00e7\u00e3o de offset na mem\u00f3ria da tela.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.movecursoroffset(100)\n</code></pre> <p>Observa\u00e7\u00f5es: Uso avan\u00e7ado para controle interno.</p> Newline - Move cursor para pr\u00f3xima linha <p>Descri\u00e7\u00e3o: Move o cursor para o primeiro campo da pr\u00f3xima linha.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.newline()\n</code></pre> <p>Observa\u00e7\u00f5es: Facilita inser\u00e7\u00e3o em m\u00faltiplas linhas.</p> Nextword - Move cursor para pr\u00f3xima palavra <p>Descri\u00e7\u00e3o: Move o cursor para a pr\u00f3xima palavra.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.nextword()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o r\u00e1pida.</p> Previousword - Move cursor para palavra anterior <p>Descri\u00e7\u00e3o: Move o cursor para a palavra anterior.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.previousword()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o r\u00e1pida.</p> Pause - Espera 350ms <p>Descri\u00e7\u00e3o: Aguarda por 350 milissegundos.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.pause()\n</code></pre> <p>Observa\u00e7\u00f5es: Usado para esperar respostas lentas do host.</p> Prompt - Abre prompt externo <p>Descri\u00e7\u00e3o: Abre prompt externo com nome da aplica\u00e7\u00e3o.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.prompt('diagnostic')\n</code></pre> <p>Observa\u00e7\u00f5es: Diagn\u00f3stico avan\u00e7ado.</p> Quit - Sai do terminal <p>Descri\u00e7\u00e3o: Sai do terminal 3270.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.quit()\n</code></pre> <p>Observa\u00e7\u00f5es: Finaliza a sess\u00e3o.</p> Set - Altera ou exibe configura\u00e7\u00f5es <p>Descri\u00e7\u00e3o: Altera ou exibe configura\u00e7\u00f5es do terminal.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.set()\n</code></pre> <p>Observa\u00e7\u00f5es: Configura\u00e7\u00f5es avan\u00e7adas.</p> <ul> <li>acceptHostname:</li> <li>aidWait: true</li> <li>altCursor: false</li> <li>alwaysInsert: false</li> <li>bindLimit: true</li> <li>blankFill: true</li> <li>clientCert:</li> <li>codePage: bracket</li> <li>crosshair: false</li> <li>cursorBlink: false</li> <li>ftBufferSize: 16384</li> <li>httpd:</li> <li>insertMode: false</li> <li>lineMode: true</li> <li>lineWrap: false</li> <li>loginMacro:</li> <li>marginedPaste: false</li> <li>model: 3279-4-E</li> <li>monoCase: false</li> <li>noTelnetInputMode: line</li> <li>nopSeconds: 0</li> <li>oerrLock: true</li> <li>overlayPaste: true</li> <li>oversize:</li> <li>preferIpv4: false</li> <li>preferIpv6: false</li> <li>printer.codepage:</li> <li>printer.name:</li> <li>printer.options:</li> <li>printerLu:</li> <li>proxy:</li> <li>reconnect: false</li> <li>retry: false</li> <li>reverseInputMode: false</li> <li>rightToLeftMode: false</li> <li>saveLines: 4096</li> <li>screenTrace: false</li> <li>scriptPort:</li> <li>selectUrl: true</li> <li>showTiming: false</li> <li>startTls: true</li> <li>termName:</li> <li>trace: false</li> <li>typeahead: true</li> <li>underscore: true</li> <li>unlockDelay: false</li> <li>unlockDelayMs: 350</li> <li>verifyHostCert: true</li> <li>visibleControl: false</li> </ul> Show - Exibe status e configura\u00e7\u00f5es <p>Descri\u00e7\u00e3o: Exibe status e configura\u00e7\u00f5es do terminal.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.show()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil para diagn\u00f3stico.</p> String - Envia texto <p>Descri\u00e7\u00e3o: Envia uma string diretamente para o campo atual.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.string('Ol\u00e1 mundo')\n</code></pre> <p>Observa\u00e7\u00f5es: Entrada direta de texto.</p> Temporarycomposemap - Define mapa de composi\u00e7\u00e3o tempor\u00e1rio <p>Descri\u00e7\u00e3o: Define um mapa tempor\u00e1rio de composi\u00e7\u00e3o para teclas.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.temporarycomposemap('custommap')\n</code></pre> <p>Observa\u00e7\u00f5es: Mapeamento tempor\u00e1rio para caracteres.</p> Temporarykeymap - Alias para Keymap <p>Descri\u00e7\u00e3o: Alias para ativar keymap tempor\u00e1rio.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.temporarykeymap('custommap')\n</code></pre> <p>Observa\u00e7\u00f5es: Uso tempor\u00e1rio de keymaps.</p> Toggle - Alterna configura\u00e7\u00e3o <p>Descri\u00e7\u00e3o: Alterna uma configura\u00e7\u00e3o espec\u00edfica para ligado/desligado.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.toggle('insert_mode', 'off')\n</code></pre> <p>Observa\u00e7\u00f5es: Ativa ou desativa op\u00e7\u00f5es.</p> Toggleinsert - Ativa/desativa modo inser\u00e7\u00e3o <p>Descri\u00e7\u00e3o: Alterna o modo inser\u00e7\u00e3o ligado/desligado.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.toggleinsert()\n</code></pre> <p>Observa\u00e7\u00f5es: Ativa modo inser\u00e7\u00e3o alternado.</p> Togglereverse - Ativa/desativa modo reverso <p>Descri\u00e7\u00e3o: Alterna o modo reverso de entrada.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.togglereverse()\n</code></pre> <p>Observa\u00e7\u00f5es: Alterna modo reverso.</p> Transfer - Transfer\u00eancia de arquivos IND$FILE <p>Descri\u00e7\u00e3o: Transfer\u00eancia de arquivos via IND$FILE entre host e cliente.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.transfer('receive file.txt')\n</code></pre> <p>Observa\u00e7\u00f5es: Requer configura\u00e7\u00e3o no host.</p> Up - Move cursor para cima <p>Descri\u00e7\u00e3o: Move o cursor para a linha acima.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.up()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o vertical.</p> Wait - Aguarda eventos do host <p>Descri\u00e7\u00e3o: Aguarda por eventos do host, com par\u00e2metros flex\u00edveis.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\n# Espera at\u00e9 a sess\u00e3o estar em modo 3270\nemulator.wait('3270mode')\n\n# Espera at\u00e9 um campo de entrada estar dispon\u00edvel\nemulator.wait('inputfield')\n\n# Espera at\u00e9 mudar para modo NVT (TELNET puro)\nemulator.wait('nvtmode')\n\n# Espera at\u00e9 n\u00e3o haver mais dados pendentes de sa\u00edda\nemulator.wait('output')\n\n# Espera at\u00e9 o teclado desbloquear\nemulator.wait('unlock')\n\n# Espera por 3 segundos\nemulator.wait('seconds', 3)\n\n# Aguarda at\u00e9 ser desconectado\nemulator.wait('disconnect')\n\n# Aguarda o cursor estar na linha 5, coluna 10\nemulator.wait('cursorat', row=5, col=10)\n\n# Aguarda a string \"READY\" aparecer na linha 1, coluna 1\nemulator.wait('stringat', row=1, col=1, string='READY')\n\n# Aguarda at\u00e9 existir um campo de entrada na linha 6, coluna 20\nemulator.wait('inputfieldat', row=6, col=20)\n</code></pre> <p>Observa\u00e7\u00f5es: Pode aguardar eventos ou tempo.</p> Par\u00e2metro Descri\u00e7\u00e3o <code>inputfield</code> Aguarda at\u00e9 um campo de entrada estar dispon\u00edvel. <code>nvtmode</code> Aguarda at\u00e9 entrar em modo NVT (modo TELNET puro). <code>3270mode</code> Aguarda at\u00e9 entrar em modo 3270 (sess\u00e3o estabelecida). <code>output</code> Aguarda at\u00e9 n\u00e3o haver mais dados pendentes de sa\u00edda. <code>seconds</code> Aguarda um n\u00famero de segundos. <code>disconnect</code> Aguarda at\u00e9 a sess\u00e3o ser desconectada. <code>unlock</code> Aguarda o teclado ficar desbloqueado. <code>cursorat</code> Aguarda o cursor estar em uma posi\u00e7\u00e3o espec\u00edfica. <code>stringat</code> Aguarda uma string aparecer em uma posi\u00e7\u00e3o espec\u00edfica. <code>inputfieldat</code> Aguarda um campo de entrada em uma posi\u00e7\u00e3o espec\u00edfica."},{"location":"comandos/#navegacao-com-o-cursor","title":"Navega\u00e7\u00e3o com o Cursor","text":"Down - Move cursor para baixo <p>Descri\u00e7\u00e3o: Move o cursor para a linha de baixo.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.down()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o vertical simples.</p> Left - Move cursor para esquerda <p>Descri\u00e7\u00e3o: Move o cursor uma coluna para a esquerda.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.left()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o horizontal.</p> Left2 - Move cursor 2 colunas para esquerda <p>Descri\u00e7\u00e3o: Move o cursor duas colunas para a esquerda.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.left2()\n</code></pre> <p>Observa\u00e7\u00f5es: Movimento mais r\u00e1pido para a esquerda.</p> Right - Move cursor para direita <p>Descri\u00e7\u00e3o: Move o cursor uma coluna para a direita.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.right()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o horizontal.</p> Right2 - Move cursor 2 colunas para direita <p>Descri\u00e7\u00e3o: Move o cursor duas colunas para a direita.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.right2()\n</code></pre> <p>Observa\u00e7\u00f5es: Movimento mais r\u00e1pido para a direita.</p> Up - Move cursor para cima <p>Descri\u00e7\u00e3o: Move o cursor para a linha de cima.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.up()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o vertical simples.</p> Tab - Move cursor para pr\u00f3ximo campo <p>Descri\u00e7\u00e3o: Move o cursor para o pr\u00f3ximo campo de entrada.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.tab()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o entre campos.</p> Newline - Move cursor para pr\u00f3ximo campo da linha seguinte <p>Descri\u00e7\u00e3o: Move o cursor para o primeiro campo da pr\u00f3xima linha.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.newline()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o vertical e horizontal combinada.</p> Nextword - Move cursor para pr\u00f3xima palavra <p>Descri\u00e7\u00e3o: Move o cursor para a pr\u00f3xima palavra.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.nextword()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o r\u00e1pida em texto.</p> Previousword - Move cursor para palavra anterior <p>Descri\u00e7\u00e3o: Move o cursor para a palavra anterior.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.previousword()\n</code></pre> <p>Observa\u00e7\u00f5es: Navega\u00e7\u00e3o r\u00e1pida em texto.</p>"},{"location":"comandos/#comandos-especificos-de-mainframe","title":"Comandos Espec\u00edficos de Mainframe","text":"PA - Aten\u00e7\u00e3o de Programa <p>Descri\u00e7\u00e3o: Envia a tecla de aten\u00e7\u00e3o de programa PA1, PA2, etc.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.PA(2) # envia PA2\n</code></pre> <p>Observa\u00e7\u00f5es: Usado por aplica\u00e7\u00f5es espec\u00edficas mainframe.</p> PF - Fun\u00e7\u00e3o Programada <p>Descri\u00e7\u00e3o: Envia tecla de fun\u00e7\u00e3o PF1 a PF24, equivalente \u00e0s teclas F1-F24.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.pf(12) # envia PF12\n</code></pre> <p>Observa\u00e7\u00f5es: Comandos padr\u00e3o em terminais 3270.</p> Printer - Impressora 3287 iniciar/parar <p>Descri\u00e7\u00e3o: Inicia ou para uma sess\u00e3o de impress\u00e3o associada a uma LU (Logical Unit).</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.printer(stop=True)\n</code></pre> <p>Observa\u00e7\u00f5es: Requer configura\u00e7\u00e3o de LU no host.</p> SysReq - Requisi\u00e7\u00e3o de sistema <p>Descri\u00e7\u00e3o: Envia a tecla System Request (SysReq), usada para alternar sess\u00f5es LU ou invocar         menus no host.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.sysreq()\n</code></pre> <p>Observa\u00e7\u00f5es: Comando especial mainframe.</p>"},{"location":"comandos/#utilitarios","title":"Utilit\u00e1rios","text":"Paste - Colar <p>Descri\u00e7\u00e3o: Cola o conte\u00fado do clipboard no terminal.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.paste()\n</code></pre> <p>Observa\u00e7\u00f5es: Requer permiss\u00e3o de acesso ao clipboard.</p> Redraw - Redesenhar <p>Descri\u00e7\u00e3o: Atualiza (for\u00e7a a reexibi\u00e7\u00e3o) da tela do terminal.</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.redraw()\n</code></pre> <p>Observa\u00e7\u00f5es: \u00datil quando a tela est\u00e1 corrompida.</p> Reset - Resetar teclado travado <p>Descri\u00e7\u00e3o: Libera o teclado se estiver travado (como na mensagem \"X SYSTEM\").</p> <p>Exemplo:</p> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\n# Conecta ao host mainframe na porta 992 (TLS)\nemulator.connect_host('myhost.example.com', '992')\n\nemulator.reset()\n</code></pre> <p>Observa\u00e7\u00f5es: Resolve travamentos tempor\u00e1rios.</p>"},{"location":"comandos/#tipos-de-campos-mainframe","title":"Tipos de campos MAINFRAME","text":"SF Hex equivalente Significado SF(c0=e8) <code>1D E8</code> Campo protegido, edit\u00e1vel, MDT ativo SF(c0=e0) <code>1D E0</code> Campo protegido, MDT desativado SF(c0=f0) <code>1D F0</code> Campo edit\u00e1vel, MDT ativo SF(c0=40) <code>1D 40</code> Intensificado (brilhante) SF(c0=80) <code>1D 80</code> Campo protegido (n\u00e3o edit\u00e1vel) SF(c0=20) <code>1D 20</code> Sublinhado SF(c0=10) <code>1D 10</code> MDT ativo (Modified Data Tag) SF(c0=08) <code>1D 08</code> Campo gr\u00e1fico <p>Obs.: Algumas telas s\u00e3o construidas enviando comandos que n\u00e3o s\u00e3o capturados utilizando o readbuffer do x3270, logo elas s\u00e3o reproduzidas com diferen\u00e7as.</p>"},{"location":"estrutura/","title":"Estrutura","text":"<ul> <li> README.md</li> <li>\u25b6 path_test</li> <li> pyproject.toml</li> <li>\u25b6 pyx3270<ul> <li> __init__.py</li> <li> __main__.py</li> <li>\u25b6 bin<ul> <li>\u25b6 linux<ul> <li> s3270</li> <li> x3270</li> </ul> </li> <li> start.bin</li> <li>\u25b6 windows<ul> <li> wc3270.exe</li> <li> ws3270.exe</li> </ul> </li> </ul> </li> <li> cli.py</li> <li> emulator.py</li> <li> exceptions.py</li> <li> iemulator.py</li> <li> offline.py</li> <li> file_type_pytyped py.typed</li> <li> server.py</li> <li> state.py</li> <li> tn3270.py</li> <li> x3270_commands.py</li> </ul> </li> <li> requirements-dev.txt</li> <li> requirements.txt</li> <li>\u25b6 screens</li> <li>\u25b6 tests<ul> <li> __init__.py</li> <li> conftest.py</li> <li>\u25b6 screens</li> <li> test_cli.py</li> <li> test_emulator.py</li> <li> test_exceptions.py</li> <li> test_offline.py</li> <li> test_server.py</li> </ul> </li> </ul>"},{"location":"instalacao/","title":"Instala\u00e7\u00e3o","text":""},{"location":"instalacao/#requisitos","title":"Requisitos","text":"<ul> <li>Python 3.8+</li> <li>typer</li> </ul> <p>Crie e ative um ambiente virtual, e ent\u00e3o instale o Pyx3270:</p> \ud83d\udccb Copiar pip install pyx3270"},{"location":"instalacao/#exemplo","title":"Exemplo","text":"<ul> <li>Crie um arquivo main.py com:</li> </ul> <pre><code>from x3270 import x3270\n\nemulator = x3270(visible=True)\nemulator.connect_host('myhost.example.com', '992')\n</code></pre>"},{"location":"primeiros_passos/","title":"Primeiros passos","text":"<p>Bem-vindo \u00e0 se\u00e7\u00e3o de primeiros passos! Aqui voc\u00ea encontrar\u00e1:</p>"},{"location":"primeiros_passos/#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Como instalar a biblioteca em seu projeto.</p>"},{"location":"primeiros_passos/#tutorial","title":"Tutorial","text":"<p>Como iniciar um processo projeto novo com grava\u00e7\u00e3o e reprodu\u00e7\u00e3o de telas.</p>"},{"location":"primeiros_passos/#automacao","title":"Automa\u00e7\u00e3o","text":"<p>Como iniciar uma automa\u00e7\u00e3o no Mainframe, melhores praticas e padr\u00f5es.</p> <p>Siga cada etapa para come\u00e7ar a usar o Pyx3270 com efici\u00eancia.</p>"},{"location":"sobre/","title":"O que \u00e9 Pyx3270?","text":""},{"location":"sobre/#conceito","title":"Conceito","text":"<p>A Pyx3270 \u00e9 uma biblioteca Python desenvolvida para automatizar a intera\u00e7\u00e3o com emuladores 3270, facilitando tarefas repetitivas e complexas em ambientes mainframe. Ela atua como uma camada de automa\u00e7\u00e3o, permitindo que voc\u00ea:</p> <ul> <li> <p>Grave sess\u00f5es reais e salve como arquivos</p> </li> <li> <p>Reproduza sess\u00f5es offline para testes e simula\u00e7\u00f5es</p> </li> <li> <p>Envie comandos e colete dados de forma programada</p> </li> </ul> <p>Ela \u00e9 constru\u00edda sobre emuladores compat\u00edveis com o protocolo 3270 (como s3270), e busca oferecer uma API intuitiva para automatizar opera\u00e7\u00f5es normalmente feitas manualmente.</p>"},{"location":"sobre/#o-universo-dos-mainframes","title":"O Universo dos Mainframes","text":"<p>Os mainframes s\u00e3o sistemas computacionais de grande porte que existem h\u00e1 d\u00e9cadas, especialmente em institui\u00e7\u00f5es financeiras, \u00f3rg\u00e3os p\u00fablicos e grandes corpora\u00e7\u00f5es. Eles oferecem:</p> <ul> <li> <p>Alta capacidade de processamento simult\u00e2neo</p> </li> <li> <p>Elevada confiabilidade e disponibilidade</p> </li> <li> <p>Suporte para milhares de usu\u00e1rios ao mesmo tempo</p> </li> </ul> <p>Apesar de sua robustez, muitos mainframes ainda operam com interfaces baseadas em terminal, utilizando o padr\u00e3o 3270 \u2014 um protocolo que define como os dados s\u00e3o exibidos e interagidos via emuladores de tela (como x3270, s3270, entre outros).</p> <p></p> <p>Isso significa que muitas aplica\u00e7\u00f5es legadas s\u00e3o acessadas por meio de sess\u00f5es de terminal com campos fixos, comandos de teclado e sem interface gr\u00e1fica moderna.</p>"},{"location":"tutorial/","title":"Tutorial","text":""},{"location":"tutorial/#interface-de-linhas-de-comando","title":"Interface de linhas de comando","text":"<p>Aqui voc\u00ea ir\u00e1 aprender sobre a ferramenta CLI 'Comand Line Interface' para gravar fluxo de sess\u00f5es e realizar reprodu\u00e7\u00e3o offline.</p>"},{"location":"tutorial/#gravacao","title":"\u23fa Grava\u00e7\u00e3o","text":"\ud83d\udccb Copiar pyx3270 record --address host.com:1234 [+] RECORD na porta 1234 [+] Conectando ao emulador... [+] Escutando localhost, origem host= 'host.com' port=1234 [+] Cliente conectado: ('127.0.0.1', 123456)"},{"location":"tutorial/#opcoes","title":"Op\u00e7\u00f5es","text":"<pre><code>--address TEXT              [obrigat\u00f3rio]\n--directory TEXT            [padr\u00e3o: ./screens]\n--tls / --no-tls            [padr\u00e3o: tls]\n--model TEXT                [padr\u00e3o: 2]\n--emulator / --no-emulator  [padr\u00e3o: emulator]\n--help                      Demonstra essa mensagem e sa\u00ed.\n</code></pre> Endere\u00e7o ('address') [OBRIGAT\u00d3RIO] <p>Descri\u00e7\u00e3o: IP/Hostname e porta do sistema mainframe.</p> <pre><code>pyx3270 record --address 177.139.188.25:3270 --no-tls\n</code></pre> <p> Nota: Este \u00e9 o endere\u00e7o para o mainframe do curso de mainframe/cobol da             Futureschool      </p> Diret\u00f3rio ('directory') [PADR\u00c3O: ./screens] <p>Descri\u00e7\u00e3o: Caminho onde as telas ser\u00e3o salvas como '.bin'</p> <pre><code>pyx3270 record --address host:port --directory './exemplo de caminho'\n</code></pre> TLS ('Transport Layer Security') [PADR\u00c3O: tls] <p>Descri\u00e7\u00e3o: Protocolo de seguran\u00e7a que criptografa os dados na comunica\u00e7\u00e3o. Caso n\u00e3o tenha TLS use: `--no-tls`</p> <pre><code>pyx3270 record --address host:port --no-tls\n</code></pre> Modelo ('model') [PADR\u00c3O: 2] <p>Descri\u00e7\u00e3o:O X3270 suporta diferentes modelos de terminal, cada um com dimens\u00f5es espec\u00edficas de linhas e colunas. Abaixo est\u00e3o os modelos dispon\u00edveis:</p> Modelo Linhas Colunas Descri\u00e7\u00e3o 2 24 80 Modelo cl\u00e1ssico 24x80, usado em terminais b\u00e1sicos. 3 32 80 Modelo de 32 linhas com 80 colunas, oferece mais espa\u00e7o vertical. 4 43 80 Modelo de 43 linhas com 80 colunas, adequado para telas mais longas. 5 27 132 Modelo estendido com 27 linhas e 132 colunas, ideal para telas largas. Nota: A escolha do modelo influencia o layout das telas      TN3270 exibidas pelo emulador.    Emulador ('emulator') [PADR\u00c3O: emulator] <p>Descri\u00e7\u00e3o: Abre o emulador x3270 ou wc3270 de acordo com o sistema operacional, caso apenas queira abrir o servidor e usar outro emulador use: `--no-emulator`</p> <pre><code>pyx3270 record --address host:port --no-emulator\n</code></pre>"},{"location":"tutorial/#reproducao","title":"\u23ed Reprodu\u00e7\u00e3o","text":"\ud83d\udccb Copiar pyx3270 replay [+] REPLAY do caminho: ./screens [+] Servidor de replay escutando na porta 3270 [+] Conex\u00e3o recebida de: ('127.0.0.1', 123456) [?] Digite um comando:"},{"location":"tutorial/#opcoes_1","title":"Op\u00e7\u00f5es","text":"<pre><code>--directory TEXT            [padr\u00e3o: ./screens]\n--port INTEGER              [padr\u00e3o: 3270]\n--tls / --no-tls            [padr\u00e3o: tls]\n--model TEXT                [padr\u00e3o: 2]\n--emulator / --no-emulator  [padr\u00e3o: emulator]\n--help                      Demonstra essa mensagem e sa\u00ed.\n</code></pre> Diret\u00f3rio ('directory') [PADR\u00c3O: ./screens] <p>Descri\u00e7\u00e3o: Caminho onde as telas gravadas ser\u00e3o lidas para reprodu\u00e7\u00e3o.</p> <pre><code>pyx3270 replay --directory './screens'\n</code></pre> Porta ('port') [PADR\u00c3O: 3270] <p>Descri\u00e7\u00e3o: Porta TCP onde o servidor de replay ir\u00e1 escutar conex\u00f5es.</p> <pre><code>pyx3270 replay --port 12345\n</code></pre> TLS ('Transport Layer Security') [PADR\u00c3O: tls] <p>Descri\u00e7\u00e3o: Protocolo de seguran\u00e7a que criptografa os dados na comunica\u00e7\u00e3o. Caso n\u00e3o tenha TLS       use: `--no-tls`</p> <pre><code>pyx3270 replay --no-tls\n</code></pre> Modelo ('model') [PADR\u00c3O: 2] <p>Descri\u00e7\u00e3o:O X3270 suporta diferentes modelos de terminal, cada um com dimens\u00f5es espec\u00edficas de       linhas e colunas.</p> Modelo Linhas Colunas Descri\u00e7\u00e3o 2 24 80 Modelo cl\u00e1ssico 24x80, usado em terminais b\u00e1sicos. 3 32 80 Modelo de 32 linhas com 80 colunas, oferece mais espa\u00e7o vertical. 4 43 80 Modelo de 43 linhas com 80 colunas, adequado para telas mais longas. 5 27 132 Modelo estendido com 27 linhas e 132 colunas, ideal para telas largas. Nota: A escolha do modelo influencia o layout das telas TN3270 exibidas pelo emulador.    Emulador ('emulator') [PADR\u00c3O: emulator] <p>Descri\u00e7\u00e3o: Abre o emulador x3270 ou wc3270 de acordo com o sistema operacional. Caso apenas       queira abrir o servidor use: `--no-emulator`</p> <pre><code>pyx3270 replay --no-emulator\n</code></pre>"}]}